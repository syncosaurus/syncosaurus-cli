{
  "version": 3,
  "sources": ["../../../mutators.js", "../../../src/index.mjs"],
  "sourceRoot": "/home/joseph/Documents/coding_stuff/capstone/team2_project/cf-login-autodeploy-cli/deployment_test/do-server/.wrangler/tmp/deploy-YsgG9w",
  "sourcesContent": ["export const mutators = {\n  increment,\n  decrement\n};\n\n//Mutators are async in replicache for startup: https://doc.replicache.dev/tutorial/adding-mutators\n//2nd arg should look like {key: 'count', delta: 1}\nasync function increment(tx, { key, delta }) {\n  const prev = tx.get(key);\n  const next = (prev ?? 0) + delta;\n  tx.set(key, next);\n}\n\nasync function decrement(tx, { key, delta }) {\n  console.log(`decrementing ${key} by ${delta}`);\n  const prev = tx.get(key);\n  const next = (prev ?? 0) - delta;\n  tx.set(key, next);\n}\n", "import { mutators } from '../mutators.js';\n\nclass ServerTransaction {\n\tconstructor(canon, transactionID, mutatorArgs) {\n\t\tthis.transactionID = transactionID;\n\t\tthis.mutatorArgs = mutatorArgs;\n\t\tthis.canon = canon;\n\t}\n\n\tget(key) {\n\t\treturn this.canon[key];\n\t}\n\n\tset(key, value) {\n\t\tthis.canon[key] = value;\n\t}\n}\n\n// Worker\nexport default {\n\tasync fetch(request, env) {\n\t\t// This example refers to the same Durable Object instance since it hardcodes the name \"foo\".\n\t\tlet id = env.WEBSOCKET_SERVER.idFromName('foo');\n\t\tlet stub = env.WEBSOCKET_SERVER.get(id);\n\n\t\treturn await stub.fetch(request);\n\t},\n};\n\n// Durable Object\nexport class WebSocketServer {\n\tconstructor(state, env) {\n\t\tthis.state = state;\n\t\tthis.env = env;\n\t\tthis.connections = [];\n\n\t\t// `blockConcurrencyWhile()` ensures no requests are delivered until initialization completes.\n\t\tthis.state.blockConcurrencyWhile(async() => {\n\t\t\tconsole.log(await this.state.storage.get('count'));\n\t\t\tthis.canon = await this.state.storage.get('count') || { count: 0 };\n\t\t});\n\t\tthis.mutators = mutators;\n\t\tconsole.log(this.mutators);\n\t}\n\n\tbroadcast(data) {\n\t\tthis.connections.forEach((ws) => ws.send(data));\n\t}\n\n\t// Handle HTTP requests from clients.\n\tasync fetch(request) {\n\t\tif (request.url.endsWith('/websocket')) {\n\t\t\tconst upgradeHeader = request.headers.get('Upgrade');\n\t\t\tif (!upgradeHeader || upgradeHeader !== 'websocket') {\n\t\t\t\treturn new Response('Durable Object expected Upgrade: websocket', {\n\t\t\t\t\tstatus: 426,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Creates two ends of a WebSocket connection.\n\t\t\tconst webSocketPair = new WebSocketPair();\n\t\t\tconst [client, server] = Object.values(webSocketPair);\n\t\t\tserver.accept();\n\t\t\tthis.connections.push(server);\n\n\t\t\tserver.addEventListener('message', (event) => {\n\t\t\t\tconst { transactionID, mutator, mutatorArgs, init } = JSON.parse(event.data);\n\n\t\t\t\tif (init) {\n\t\t\t\t\tconst initState = { canonState: this.canon };\n\t\t\t\t\tserver.send(JSON.stringify(initState));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst canonTx = new ServerTransaction(this.canon, transactionID, mutator, mutatorArgs);\n\t\t\t\tthis.mutators[mutator](canonTx, mutatorArgs);\n\t\t\t\tconst canonUpdate = { transactionID, canonState: this.canon }; // TODO fix these variable names\n\t\t\t\tthis.broadcast(JSON.stringify(canonUpdate));\n\t\t\t});\n\n\t\t\tserver.addEventListener('close', async (cls) => {\n\t\t\t\tthis.connections = this.connections.filter((ws) => ws !== server);\n\t\t\t\tserver.close(cls.code, 'Durable Object is closing WebSocket');\n\t\t\t});\n\n\t\t\t// CF input gates protect against unwanted concurrrency here\n\t\t\tawait this.state.storage.put('count', this.canon);\n\n\t\t\treturn new Response(null, {\n\t\t\t\tstatus: 101,\n\t\t\t\twebSocket: client,\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
